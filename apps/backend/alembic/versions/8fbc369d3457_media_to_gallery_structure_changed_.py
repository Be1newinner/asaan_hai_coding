"""Media to Gallery Structure changed, Added Tag, Technologies, Features in Project Table

Revision ID: 8fbc369d3457
Revises: d724e4d9a651
Create Date: 2025-09-03 18:44:07.517169

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8fbc369d3457'
down_revision: Union[str, None] = 'd724e4d9a651'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('project_features',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('project_technologies',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tags',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('project_feature_relations',
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('feature_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['feature_id'], ['project_features.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('project_id', 'feature_id')
    )
    op.create_table('project_media_relations',
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('media_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['media_id'], ['media.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('project_id', 'media_id')
    )
    op.create_table('project_tag_relations',
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('project_id', 'tag_id')
    )
    op.create_table('project_technology_relations',
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('technology_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.ForeignKeyConstraint(['technology_id'], ['project_technologies.id'], ),
    sa.PrimaryKeyConstraint('project_id', 'technology_id')
    )
    op.drop_index('ix_course_medias_course_id', table_name='course_medias')
    op.drop_table('course_medias')
    op.drop_index('ix_project_medias_project_id', table_name='project_medias')
    op.drop_table('project_medias')
    op.alter_column('courses', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=sa.text('now()'),
               existing_nullable=False)
    op.alter_column('courses', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=sa.text('now()'),
               existing_nullable=False)
    op.add_column('media', sa.Column('project_owner_id', sa.Integer(), nullable=True))
    op.add_column('media', sa.Column('course_owner_id', sa.UUID(), nullable=True))
    op.alter_column('media', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=sa.text('now()'),
               existing_nullable=False)
    op.alter_column('media', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=sa.text('now()'),
               existing_nullable=False)
    op.create_index(op.f('ix_media_course_owner_id'), 'media', ['course_owner_id'], unique=False)
    op.create_index(op.f('ix_media_project_owner_id'), 'media', ['project_owner_id'], unique=False)
    op.create_foreign_key(None, 'media', 'projects', ['project_owner_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'media', 'courses', ['course_owner_id'], ['id'], ondelete='CASCADE')
    op.alter_column('projects', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=sa.text('now()'),
               existing_nullable=False)
    op.alter_column('projects', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=sa.text('now()'),
               existing_nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('projects', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=None,
               existing_nullable=False)
    op.alter_column('projects', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=None,
               existing_nullable=False)
    op.drop_constraint(None, 'media', type_='foreignkey')
    op.drop_constraint(None, 'media', type_='foreignkey')
    op.drop_index(op.f('ix_media_project_owner_id'), table_name='media')
    op.drop_index(op.f('ix_media_course_owner_id'), table_name='media')
    op.alter_column('media', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=None,
               existing_nullable=False)
    op.alter_column('media', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=None,
               existing_nullable=False)
    op.drop_column('media', 'course_owner_id')
    op.drop_column('media', 'project_owner_id')
    op.alter_column('courses', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=None,
               existing_nullable=False)
    op.alter_column('courses', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=None,
               existing_nullable=False)
    op.create_table('project_medias',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('image_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('project_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['image_id'], ['media.id'], name='project_medias_image_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name='project_medias_project_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='project_medias_pkey'),
    sa.UniqueConstraint('image_id', name='project_medias_image_id_key', postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index('ix_project_medias_project_id', 'project_medias', ['project_id'], unique=False)
    op.create_table('course_medias',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('image_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('course_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], name='course_medias_course_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['image_id'], ['media.id'], name='course_medias_image_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='course_medias_pkey'),
    sa.UniqueConstraint('image_id', name='course_medias_image_id_key', postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index('ix_course_medias_course_id', 'course_medias', ['course_id'], unique=False)
    op.drop_table('project_technology_relations')
    op.drop_table('project_tag_relations')
    op.drop_table('project_media_relations')
    op.drop_table('project_feature_relations')
    op.drop_table('tags')
    op.drop_table('project_technologies')
    op.drop_table('project_features')
    # ### end Alembic commands ###
